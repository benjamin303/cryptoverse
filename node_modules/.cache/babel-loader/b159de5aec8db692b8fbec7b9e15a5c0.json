{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': 'aaec7d53e9msh7848863c5432493p1fe414jsnf7702b2e7ea8'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest(`/coins?limit=${count}`)\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges')\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: _ref => {\n        let {\n          coinId,\n          timePeriod\n        } = _ref;\n        return createRequest(`/coin/${coinId}/history/${timePeriod}`);\n      }\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery\n} = cryptoApi;","map":{"version":3,"sources":["C:/Users/benja/Documents/Projects/Github/cryptoverse/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,MAAMC,gBAAgB,GAAG;AACrB,qBAAmB,6BADE;AAErB,oBAAkB;AAFG,CAAzB;AAKA,MAAMC,OAAO,GAAG,qCAAhB;;AAEA,MAAMC,aAAa,GAAIC,GAAD,KAAU;AAAEA,EAAAA,GAAF;AAAOC,EAAAA,OAAO,EAAGJ;AAAjB,CAAV,CAAtB;;AACA,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;AAC/BQ,EAAAA,WAAW,EAAE,WADkB;AAE/BC,EAAAA,SAAS,EAAER,cAAc,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAFM;AAG/BO,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,UAAU,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAGC,KAAD,IAAWV,aAAa,CAAE,gBAAeU,KAAM,EAAvB;AADT,KAAd,CADS;AAIrBC,IAAAA,YAAY,EAAEJ,OAAO,CAACE,KAAR,CAAc;AACxBA,MAAAA,KAAK,EAAE,MAAMT,aAAa,CAAC,YAAD;AADF,KAAd,CAJO;AAOrBY,IAAAA,gBAAgB,EAAEL,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAGI,MAAD,IAAYb,aAAa,CAAE,SAAQa,MAAO,EAAjB;AADJ,KAAd,CAPG;AAUrBC,IAAAA,gBAAgB,EAAEP,OAAO,CAACE,KAAR,CAAc;AAC5BA,MAAAA,KAAK,EAAE;AAAA,YAAC;AAACI,UAAAA,MAAD;AAASE,UAAAA;AAAT,SAAD;AAAA,eAA0Bf,aAAa,CAAE,SAAQa,MAAO,YAAWE,UAAW,EAAvC,CAAvC;AAAA;AADqB,KAAd;AAVG,GAAd;AAHoB,CAAD,CAA3B;AAmBP,OAAO,MAAM;AACTC,EAAAA,kBADS;AACWC,EAAAA,wBADX;AACqCC,EAAAA,wBADrC;AAC+DC,EAAAA;AAD/D,IAEThB,SAFG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'aaec7d53e9msh7848863c5432493p1fe414jsnf7702b2e7ea8'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers:  cryptoApiHeaders})\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n        })\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery\r\n} = cryptoApi;\r\n"]},"metadata":{},"sourceType":"module"}